{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\ReactJS\\\\weather-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"5027671a85a6aed2f1ed6f905b84b7a3\",\n  base: \"api.openweathermap.org/data/2.5/weather?q={delhi}&appid={API key}\"\n};\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=$(query)&units=metric&APPID=${api.key}`).then(res => res.json()).then(reasult => {\n        setWeather(reasult);\n        setQuery('');\n        console.log(reasult);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let yaer = d.getFullYear();\n    return `${day} ${date} ${month} ${yaer}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"search-bar\",\n            placeholder: \"search...\",\n            onChange: e => setQuery(e.target.value),\n            value: query,\n            onKeyPress: search\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: \"New York city,US\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: \"15\\xB0C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: \"Sunny\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"TbV6RIenIw9rfVkB4uTRg2C115o=\");\n\n_c = App;\nexport default App; // powawal487@botfed.com\n// pass:stark-kelp-widget-arming\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/projects/ReactJS/weather-react/src/App.js"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","reasult","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","yaer","getFullYear","e","target","value","Date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AACA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAC,kCADM;AAEVC,EAAAA,IAAI,EAAC;AAFK,CAAZ;;AAMA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAK,CAACO,OAAD,EAASC,UAAT,IAAuBR,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMS,MAAM,GAAGC,GAAG,IAAG;AACnB,QAAIA,GAAG,CAACR,GAAJ,KAAY,OAAhB,EAAyB;AACvBS,MAAAA,KAAK,CAAE,GAAEV,GAAG,CAACE,IAAK,yCAAwCF,GAAG,CAACC,GAAI,EAA7D,CAAL,CACCU,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,OAAO,IAAI;AACfP,QAAAA,UAAU,CAACO,OAAD,CAAV;AACAT,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,OAND;AAOD;AACF,GAVD;;AAaF,QAAMG,WAAW,GAAIC,CAAD,IAAM;AACxB,QAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAb;AACA,QAAIC,IAAI,GAAG,CAAC,QAAD,EAAU,QAAV,EAAmB,SAAnB,EAA6B,WAA7B,EAAyC,UAAzC,EAAoD,QAApD,EAA6D,UAA7D,CAAX;AAEA,QAAIC,GAAG,GAAGD,IAAI,CAACF,CAAC,CAACI,MAAF,EAAD,CAAd;AACA,QAAIC,IAAI,GAAGL,CAAC,CAACM,OAAF,EAAX;AACA,QAAIC,KAAK,GAAGN,MAAM,CAACD,CAAC,CAACQ,QAAF,EAAD,CAAlB;AACA,QAAIC,IAAI,GAAGT,CAAC,CAACU,WAAF,EAAX;AAEA,WAAQ,GAAEP,GAAI,IAAGE,IAAK,IAAGE,KAAM,IAAGE,IAAK,EAAvC;AACD,GAVD;;AAaE,sBAEE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AACA,YAAA,IAAI,EAAC,MADL;AAEA,YAAA,SAAS,EAAC,YAFV;AAGA,YAAA,WAAW,EAAC,WAHZ;AAIA,YAAA,QAAQ,EAAEE,CAAC,IAAIxB,QAAQ,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJvB;AAKA,YAAA,KAAK,EAAE3B,KALP;AAMA,YAAA,UAAU,EAAEI;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEM;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,sBAAuBS,WAAW,CAAC,IAAIe,IAAJ,EAAD;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAFN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAkBM;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA,mBAFF;AAqCD;;GApEQ7B,G;;KAAAA,G;AAsET,eAAeA,GAAf,C,CAcA;AACA","sourcesContent":["import React, { useState } from 'react';\nconst api = {\n  key:\"5027671a85a6aed2f1ed6f905b84b7a3\",\n  base:\"api.openweathermap.org/data/2.5/weather?q={delhi}&appid={API key}\"\n}\n\n\nfunction App() {\n\n  const[query,setQuery] = useState('');\n  const[weather,setWeather] = useState({});\n\n  const search = evt =>{\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=$(query)&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(reasult => {\n        setWeather(reasult);\n        setQuery('');\n        console.log(reasult);\n      });\n    }\n  }\n  \n\nconst dateBuilder = (d) =>{\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"sunday\",\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\",\"saturday\"];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let yaer = d.getFullYear();\n\n  return `${day} ${date} ${month} ${yaer}`\n}\n\n\n  return (\n\n    <>\n    <div className=\"app\">\n      <main>\n        <div className=\"search-box\">\n          <input \n          type=\"text\"\n          className=\"search-bar\"\n          placeholder=\"search...\"\n          onChange={e => setQuery(e.target.value)}\n          value={query}\n          onKeyPress={search}\n          />\n\n        </div>\n        <div className=\"location-box\">\n            <div className=\"location\">New York city,US</div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            \n            </div>\n\n            <div className=\"weather-box\">\n              <div className=\"temp\">\n                15Â°C\n              </div>\n              <div className=\"weather\">Sunny</div>\n              \n\n\n            </div>\n      \n      </main>\n      \n    </div>\n    </>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n// powawal487@botfed.com\n// pass:stark-kelp-widget-arming"]},"metadata":{},"sourceType":"module"}